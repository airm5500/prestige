/* global Ext */

Ext.define('testextjs.controller.CompteExploitationCtr', {
    extend: 'Ext.app.Controller',
    views: ['testextjs.view.Dashboard.CompteExploitation'],
    refs: [{
            ref: 'compteExploitation',
            selector: 'compteExploitation'
        },
        {
            ref: 'imprimerBtn',
            selector: 'compteExploitation #imprimer'
        },
        {
            ref: 'compteExploitationGrid',
            selector: 'compteExploitation gridpanel'
        },
        {
            ref: 'pagingtoolbar',
            selector: 'compteExploitation gridpanel pagingtoolbar'
        }

        , {
            ref: 'dtStart',
            selector: 'compteExploitation #dtStart'
        }, {
            ref: 'dtEnd',
            selector: 'compteExploitation #dtEnd'
        },
        {ref: 'rechercherButton',
            selector: 'compteExploitation #rechercher'

        },

        {
            ref: 'codeFrom',
            selector: 'compteExploitation #codeFrom'
        }, {
            ref: 'codeTo',
            selector: 'compteExploitation #codeTo'
        },
        {
            ref: 'especeVeto',
            selector: 'compteExploitation #especeVeto'
        },
        {
            ref: 'especeVetoMarge',
            selector: 'compteExploitation #especeVetoMarge'
        },
        {
            ref: 'creditVeto',
            selector: 'compteExploitation #creditVeto'
        },
        {
            ref: 'creditVetoMarge',
            selector: 'compteExploitation #creditVetoMarge'
        },
        {
            ref: 'espece',
            selector: 'compteExploitation #espece'
        },

        {
            ref: 'especeMarge',
            selector: 'compteExploitation #especeMarge'
        },
        {
            ref: 'credit',
            selector: 'compteExploitation #credit'
        },
        {
            ref: 'creditMarge',
            selector: 'compteExploitation #creditMarge'
        }
    ],
    init: function (application) {
        this.control({
            'compteExploitation gridpanel pagingtoolbar': {
                beforechange: this.doBeforechange
            },
            'compteExploitation #rechercher': {
                click: this.doSearch
            },
            'compteExploitation #imprimer': {
                click: this.onPdfClick
            },
            'compteExploitation #rechercherVeto': {
                click: this.doSearchVeto
            }

            /* 'compteExploitation gridpanel': {
             viewready: this.doInitStore
             }*/

        });
    },

    onPdfClick: function () {
        let me = this;
        let dtStart = me.getDtStart().getSubmitValue();
        let dtEnd = me.getDtEnd().getSubmitValue();
        let codeFrom = me.getCodeFrom().getValue();
        let codeTo = me.getCodeTo().getValue();
        var linkUrl = '../DataReportingServlet?mode=COMPTE_EXPLOITATION&dtStart=' + dtStart + '&dtEnd=' + dtEnd
                + '&codeTo=' + codeTo + '&codeFrom=' + codeFrom;
        window.open(linkUrl);
    },
    doMetachange: function (store, meta) {
        /*  var me = this;
         me.buildSummary(meta);*/
    },
    doBeforechange: function (page, currentPage) {
        var me = this;
        var myProxy = me.getCompteExploitationGrid().getStore().getProxy();
        myProxy.params = {
            dtEnd: null,
            dtStart: null,
            codeTo: null,
            codeFrom: null

        };
        let codeFrom = me.getCodeFrom().getValue();
        let codeTo = me.getCodeTo().getValue();
        myProxy.setExtraParam('codeFrom', codeFrom);
        myProxy.setExtraParam('codeTo', codeTo);
        myProxy.setExtraParam('dtEnd', me.getDtEnd().getSubmitValue());
        myProxy.setExtraParam('dtStart', me.getDtStart().getSubmitValue());
    },
    doInitStore: function () {
        var me = this;
        //     me.getCompteExploitationGrid().getStore().addListener('metachange', this.doMetachange, this);
        // me.doSearch();
    },

    doSearchVeto: function () {
        var me = this;
        var codeFrom = me.getCodeFrom().getValue();
        var codeTo = me.getCodeTo().getValue();
        me.getCompteExploitationGrid().getStore().load({
            params: {
                dtStart: me.getDtStart().getSubmitValue(),
                dtEnd: me.getDtEnd().getSubmitValue(),
                codeFrom: codeFrom,
                codeTo: codeTo

            }
        });
    },
    doSearch: function () {
        let me = this;
        let  dtStart = me.getDtStart().getSubmitValue();
        let  dtEnd = me.getDtEnd().getSubmitValue();
        var progress = Ext.MessageBox.wait('Veuillez patienter . . .', 'En cours de traitement!');
        Ext.Ajax.request({
            method: 'GET',
            url: '../api/v1/compteexploitation',
            params: {
                "dtStart": dtStart,
                "dtEnd": dtEnd
            },
            success: function (response, options) {
                var data = Ext.JSON.decode(response.responseText, true);
                progress.hide();
                me.getEspece().setValue(data.espece);
                me.getEspeceVeto().setValue(data.especeVeto);
                me.getEspeceMarge().setValue(data.especeMarge);
                me.getEspeceVetoMarge().setValue(data.especeVetoMarge);
                me.getCredit().setValue(data.credit);
                me.getCreditVeto().setValue(data.creditVeto);
                me.getCreditMarge().setValue(data.creditMarge);
                me.getCreditVetoMarge().setValue(data.creditVetoMarge);
            },
            failure: function (response, options) {
                progress.hide();
                Ext.Msg.alert("Message", 'Erreur du serveur ' + response.status);
            }

        });
        me.doSearchVeto();
    }

});