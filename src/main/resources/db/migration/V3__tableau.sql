DELIMITER @@
DROP PROCEDURE IF EXISTS proc_tableaupharmacieannulation @@
CREATE PROCEDURE proc_tableaupharmacieannulation
(IN dt_start date, IN dt_end date,IN emplacementid varchar(40))
BEGIN 
DECLARE DATEOPERATION DATE;
DECLARE CACOMPTANT NUMERIC(15);
DECLARE CACREDIT  NUMERIC(15);
DECLARE CAREMISE NUMERIC(15);
DECLARE CheckExists INT DEFAULT 0;  
DECLARE done INT DEFAULT 0;
DECLARE curbl CURSOR FOR
SELECT DATE(d.dateOp) AS DATEOPERATION,SUM(d.montantPaye) ,SUM(d.montantTP)-SUM(d.montantRestant),SUM(d.remise) FROM annulation_snapshot d WHERE
DATE(d.`dateOp`) BETWEEN dt_start AND dt_end AND d.`emplacement`=emplacementid
GROUP BY DATE(d.`dateOp`);

DECLARE CONTINUE HANDLER FOR NOT FOUND SET done=1;
CREATE TEMPORARY TABLE IF NOT EXISTS emp_tableaupharmacien_table
(
f_DATEOPERATION DATE PRIMARY KEY,
 f_CACOMPTANT NUMERIC(15) DEFAULT 0,
 f_CACOMPTANTOTHER NUMERIC(15) DEFAULT 0,
 f_CACREDIT NUMERIC(15) DEFAULT 0,
f_CAREMISE NUMERIC(12) DEFAULT 0,
f_NOMBRE NUMERIC(8)DEFAULT 0,
f_ACHATLABOREX NUMERIC(15) DEFAULT 0,
f_ACHATDPCI NUMERIC(15) DEFAULT 0,
f_ACHATCOPHARMED NUMERIC(15) DEFAULT 0,
f_ACHATTEDISPHARMA NUMERIC(15) DEFAULT 0,
f_ACHATAUTRES NUMERIC(15) DEFAULT 0,
f_VALEURACHAT NUMERIC(15) DEFAULT 0
);
OPEN curbl;
bl_loop:LOOP
FETCH curbl INTO DATEOPERATION,CACOMPTANT,CACREDIT,CAREMISE;
IF done=1 THEN 
 LEAVE bl_loop;
 END IF;
 
SELECT COUNT(*) INTO CheckExists FROM emp_tableaupharmacien_table WHERE f_DATEOPERATION=DATEOPERATION;
IF(CheckExists>0)THEN 
UPDATE emp_tableaupharmacien_table SET f_CACOMPTANT=f_CACOMPTANT-CACOMPTANT,f_CACREDIT=f_CACREDIT-CACREDIT,f_CAREMISE=f_CAREMISE-CAREMISE,f_CACOMPTANTOTHER=f_CACOMPTANTOTHER-CACOMPTANT WHERE f_DATEOPERATION=DATEOPERATION;
ELSE
INSERT INTO emp_tableaupharmacien_table (f_DATEOPERATION,f_CACOMPTANT,f_CACOMPTANTOTHER,f_CACREDIT,f_CAREMISE)
 VALUES (DATEOPERATION,-CACOMPTANT,-CACOMPTANT,-CACREDIT,-CAREMISE);
END IF;
END LOOP bl_loop;
 CLOSE curbl;

END @@ 
DELIMITER ; 
