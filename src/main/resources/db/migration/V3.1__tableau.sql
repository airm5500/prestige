DELIMITER @@
DROP PROCEDURE proc_tableaupharmacien @@
CREATE PROCEDURE proc_tableaupharmacien
(IN dt_start date, IN dt_end date,IN emplacementid varchar(40))
BEGIN 
DECLARE DATEOPERATION DATE;
DECLARE CACOMPTANT NUMERIC(15);
DECLARE CACOMPTANTOTHER NUMERIC(15);
DECLARE MVTFALSE NUMERIC(15);
DECLARE CACREDIT NUMERIC(15);
DECLARE CAREMISE NUMERIC(12);
DECLARE NOMBRE NUMERIC(8);
DECLARE done INT DEFAULT 0;
DECLARE curbl CURSOR FOR 
SELECT COUNT(o.`lg_PREENREGISTREMENT_ID`) AS NOMBRE,DATE(o.`dt_UPDATED`)AS DATEOPERATION,
SUM(CASE WHEN (o.`lg_TYPE_VENTE_ID`<> '5' AND o.`str_STATUT_VENTE`<>'Differe' AND o.`str_TYPE_VENTE`='VNO')  
THEN (o.`int_PRICE`)  WHEN (o.`lg_TYPE_VENTE_ID`<> '5' AND o.`str_STATUT_VENTE`<>'Differe' AND o.`str_TYPE_VENTE`='VO') THEN (o.`int_CUST_PART`)
WHEN (o.`lg_TYPE_VENTE_ID`<> '5' AND o.`str_STATUT_VENTE`='Differe' ) THEN (SELECT e.`int_PRICE` FROM t_preenregistrement_compte_client e WHERE o.`lg_PREENREGISTREMENT_ID`=e.`lg_PREENREGISTREMENT_ID`)
 ELSE 0 END) AS CACOMPTANT,
SUM(CASE 
	WHEN (o.`lg_TYPE_VENTE_ID`<> '5' AND o.`str_STATUT_VENTE`<>'Differe' AND o.`str_TYPE_VENTE`='VNO')  
		THEN (o.`int_PRICE_OTHER`)  
	WHEN (o.`lg_TYPE_VENTE_ID`<> '5' AND o.`str_STATUT_VENTE`<>'Differe' AND o.`str_TYPE_VENTE`='VO') 
		THEN (o.`int_CUST_PART`)
	WHEN (o.`lg_TYPE_VENTE_ID`<> '5' AND o.`str_STATUT_VENTE`='Differe' ) 
		THEN (SELECT e.`int_PRICE` FROM t_preenregistrement_compte_client e 
		WHERE o.`lg_PREENREGISTREMENT_ID`=e.`lg_PREENREGISTREMENT_ID`)
 	ELSE 0 END) AS CACOMPTANTOTHER,
SUM(CASE WHEN (o.`lg_TYPE_VENTE_ID`<> '5' AND o.`str_STATUT_VENTE`<>'Differe' AND o.`str_TYPE_VENTE`='VO')  
THEN (o.`int_PRICE`-o.`int_CUST_PART`)  
WHEN (o.`lg_TYPE_VENTE_ID`<> '5' AND o.`str_STATUT_VENTE`='Differe' AND o.`str_TYPE_VENTE`='VNO' ) THEN 
(SELECT e.`int_PRICE_RESTE` FROM t_preenregistrement_compte_client e WHERE o.`lg_PREENREGISTREMENT_ID`=e.`lg_PREENREGISTREMENT_ID`)
 WHEN (o.`lg_TYPE_VENTE_ID`<> '5' AND o.`str_STATUT_VENTE`='Differe' AND o.`str_TYPE_VENTE`='VO' ) 
THEN (SELECT (o.`int_PRICE`-o.`int_CUST_PART`+e.`int_PRICE_RESTE`) 
FROM t_preenregistrement_compte_client e WHERE o.`lg_PREENREGISTREMENT_ID`=e.`lg_PREENREGISTREMENT_ID`)
ELSE 0 END) AS CACREDIT,
SUM(o.`int_PRICE_REMISE`) AS CAREMISE,
(SELECT CASE WHEN SUM(t.int_AMOUNT) IS NOT NULL THEN SUM(t.int_AMOUNT) ELSE 0 END FROM t_mvt_caisse t WHERE DATE(t.dt_DATE_MVT) = DATE(o.`dt_CREATED`) AND t.bool_CHECKED = false) AS MVTFALSE
FROM t_preenregistrement o,t_user tu WHERE o.`b_IS_CANCEL`=0 AND o.`str_STATUT`='is_Closed' AND o.`int_PRICE`>0 
AND DATE(o.`dt_UPDATED`)>=DATE(`dt_start`) AND DATE(o.`dt_UPDATED`)<=DATE(dt_end) AND o.lg_TYPE_VENTE_ID <> '5' 
AND o.lg_USER_ID=tu.lg_USER_ID AND tu.lg_EMPLACEMENT_ID=emplacementid
GROUP BY DATE(o.`dt_UPDATED`);
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done=1;
DROP TEMPORARY TABLE IF EXISTS emp_tableaupharmacien_table;
 CREATE TEMPORARY TABLE IF NOT EXISTS emp_tableaupharmacien_table
(
f_DATEOPERATION DATE PRIMARY KEY,
f_CACOMPTANT NUMERIC(15) DEFAULT 0,
f_CACOMPTANTOTHER NUMERIC(15) DEFAULT 0,
f_CACREDIT NUMERIC(15) DEFAULT 0,
f_MVTFALSE NUMERIC(15) DEFAULT 0,
f_CAREMISE NUMERIC(12) DEFAULT 0,
f_NOMBRE NUMERIC(8)DEFAULT 0,
f_ACHATLABOREX NUMERIC(15) DEFAULT 0,
f_ACHATDPCI NUMERIC(15) DEFAULT 0,
f_ACHATCOPHARMED NUMERIC(15) DEFAULT 0,
f_ACHATTEDISPHARMA NUMERIC(15) DEFAULT 0,
f_ACHATAUTRES NUMERIC(15) DEFAULT 0,
f_VALEURACHAT NUMERIC(15) DEFAULT 0
);
OPEN curbl;
bl_loop:LOOP
FETCH curbl INTO NOMBRE,DATEOPERATION,CACOMPTANT,CACOMPTANTOTHER,CACREDIT,CAREMISE,MVTFALSE;
IF done=1 THEN 
 LEAVE bl_loop;
 END IF;
INSERT INTO emp_tableaupharmacien_table (f_DATEOPERATION,f_CACOMPTANT,f_CACOMPTANTOTHER,f_CACREDIT,f_CAREMISE,f_NOMBRE,f_MVTFALSE)
 VALUES (DATEOPERATION,CACOMPTANT,CACOMPTANTOTHER,CACREDIT,CAREMISE,NOMBRE,MVTFALSE);
END LOOP bl_loop;
 CLOSE curbl;
CALL proc_tableaupharmacieannulation(dt_start,dt_end,emplacementid);
CALL proc_tableaupharmacienachat(dt_start,dt_end);
CALL proc_tableaupharmacienavoir(dt_start,dt_end);
SELECT DATE_FORMAT(f_DATEOPERATION,'%d/%m/%Y')AS f_DATEOPERATIONFORMAT,f_CACOMPTANT,f_CACREDIT,f_CAREMISE,((f_CACOMPTANT+f_CACREDIT) - f_CAREMISE) AS CANET,f_NOMBRE,f_ACHATLABOREX,f_ACHATDPCI,f_ACHATCOPHARMED,f_ACHATTEDISPHARMA,f_ACHATAUTRES,f_VALEURACHAT,((f_ACHATLABOREX+f_ACHATDPCI+f_ACHATCOPHARMED+f_ACHATTEDISPHARMA+f_ACHATAUTRES)-f_VALEURACHAT) AS ACHATNETS,f_CACOMPTANTOTHER,f_MVTFALSE,((f_CACOMPTANTOTHER+f_CACREDIT) - f_CAREMISE) AS CANETOTHER
FROM emp_tableaupharmacien_table 
ORDER BY f_DATEOPERATION;

END @@ 
DELIMITER ; 
